// <auto-generated />
using ClassLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ClassLibrary.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20180411200222_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary.Models.Desenvolvedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnpj");

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Desenvolvedores");
                });

            modelBuilder.Entity("ClassLibrary.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Municipio");

                    b.Property<string>("Numero");

                    b.Property<string>("Rua");

                    b.Property<string>("Uf");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ClassLibrary.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DesenvolvedorId");

                    b.Property<string>("Especializacao");

                    b.Property<string>("Formacao");

                    b.Property<int>("PessoaId");

                    b.HasKey("Id");

                    b.HasIndex("DesenvolvedorId");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("ClassLibrary.Models.Gerente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FuncionarioId");

                    b.Property<int>("Registro");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Gerentes");
                });

            modelBuilder.Entity("ClassLibrary.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Classificacao");

                    b.Property<string>("Descricao");

                    b.Property<DateTime>("Lancamento");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("ClassLibrary.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ClassLibrary.Models.Programador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FuncionarioId");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Programadores");
                });

            modelBuilder.Entity("ClassLibrary.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ClassLibrary.Models.TagJogo", b =>
                {
                    b.Property<int>("JogoId");

                    b.Property<int>("TagId");

                    b.Property<int>("Id");

                    b.HasKey("JogoId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TagsJogo");
                });

            modelBuilder.Entity("ClassLibrary.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("Idade");

                    b.Property<int>("PessoaId");

                    b.Property<double>("Saldo");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClassLibrary.Models.Desenvolvedor", b =>
                {
                    b.HasOne("ClassLibrary.Models.Endereco")
                        .WithOne("Desenvolvedor")
                        .HasForeignKey("ClassLibrary.Models.Desenvolvedor", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.Funcionario", b =>
                {
                    b.HasOne("ClassLibrary.Models.Desenvolvedor", "Desenvolvedor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("DesenvolvedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClassLibrary.Models.Pessoa")
                        .WithOne("Funcionario")
                        .HasForeignKey("ClassLibrary.Models.Funcionario", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.Gerente", b =>
                {
                    b.HasOne("ClassLibrary.Models.Funcionario")
                        .WithOne("Gerente")
                        .HasForeignKey("ClassLibrary.Models.Gerente", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.Jogo", b =>
                {
                    b.HasOne("ClassLibrary.Models.Usuario", "Usuario")
                        .WithMany("Jogos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.Programador", b =>
                {
                    b.HasOne("ClassLibrary.Models.Funcionario")
                        .WithOne("Programador")
                        .HasForeignKey("ClassLibrary.Models.Programador", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.TagJogo", b =>
                {
                    b.HasOne("ClassLibrary.Models.Jogo", "Jogo")
                        .WithMany("TagsJogo")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ClassLibrary.Models.Tag", "Tag")
                        .WithMany("TagsJogo")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary.Models.Usuario", b =>
                {
                    b.HasOne("ClassLibrary.Models.Pessoa")
                        .WithOne("Usuario")
                        .HasForeignKey("ClassLibrary.Models.Usuario", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
